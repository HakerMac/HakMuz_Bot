import asyncio
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.types import CallbackQuery
import eyed3
import os
import datetime

from humanfriendly.terminal import message
from pydub import AudioSegment
from mutagen.mp3 import MP3
from mutagen.id3 import ID3, APIC







from Config import *
from SQL import premium_time_one_day, time_one_day, Premium_DeleteUser_db, Perehod_user, \
    Premium_Koin_dovnload, Premium_Koin_Save, Koin_Save, Koin_dovnload, ShowUsers_db, Proverka1_db, \
    Proverka_AddUser_db, AddUser_db, DeleteUser_db, Premium_ShowUsers_db, Premium_Proverka1_db, Premium_AddUser_db, \
    Koin_Save_in_operation, Premium_Koin_Save_in_Operation, otzovik_save, otzovik_Proverka, ShowUsers_otzovik_db, \
    Delete_otzov, title_save, Show_title, artist_save, Show_artist, photo_status_save, Show_photo_status, file_id_save, Show_file_id, peremen, \
    Delete_peremen, Show_photo_path, photo_path_save, delete_message_0_save, Show_delete_message_0, delete_message_1_save, Show_delete_message_1, \
    delete_message_2_save, Show_delete_message_2, photo_otprav_save, Show_photo_otprav, Rasolat, Public_Otzov_save, Public_otzov, Show_public_otzov, \
    Public_Otzov_message_id, Show_public_data_otzov, Delete_otzov_data, delete_message_admin_save, Show_delete_message_admin




Nomer_Stroki = 0
id = 0
id_user = None
title = '‚ùå'
artist = '‚ùå'
svobodno = True
Premium_Status = False
photo_status = 0

text = 'üòï –ü–æ–∫–∞ –∑–∞–Ω—è—Ç–æ \n\n–ö—Ç–æ —Ç–æ –¥–æ —Å–∏—Ö –ø–æ—Ä –∏–∑–º–µ–Ω—è–µ—Ç —Å–≤–æ–π —Ç—Ä–µ–∫, –ø—Ä–∏–¥–µ—Ç—Å—è –µ—â–µ —á—É—Ç—å —á—É—Ç—å –ø–æ–¥–æ–∂–¥–∞—Ç—å!\n\n' \
       'üîÑ –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–∏—Ç—å!\n\n‚ùóÔ∏è –ï—Å–ª–∏ –æ—á–µ–Ω—å –¥–æ–ª–≥–æ –∑–∞–Ω—è—Ç–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ –±–æ—Ç–∞!'
text1 = ''
START_TEXT = '''<strong>
ü•∑ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ü•∑

~~~~~~~~~~~

üéπ –≠—Ç–æ—Ç –±–æ—Ç –º–µ–Ω—è–µ—Ç —Ç—ç–≥–∏ —É –ø–µ—Å–µ–Ω –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ:

- –Ω–∞–∑–≤–∞–Ω–∏–µ

- –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è

- –æ–±–ª–æ–∂–∫–∞

- —É–±–∏—Ä–∞–µ—Ç –ø—Ä–∏–ø–∏—Å–∫—É .mp3 –≤ –∫–æ–Ω—Ü–µ

‚ÄºÔ∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ª—é–±–æ–º—É –∂–µ–ª–∞—é—â–µ–º—É, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É —Å–≤–æ—é –ø–µ—Å–Ω—é –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞ (–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ mp3 —Ñ–æ—Ä–º–∞—Ç–∞) ‚ÄºÔ∏è

~~~~~~~~~~~

üìù –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:

- –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–∂–º–∏—Ç–µ - /profile, —Ç–∞–º –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –æ—Ç–∑—ã–≤—ã –∏ –º–∞–≥–∞–∑–∏–Ω

- –û—Ç–∑—ã–≤—ã –Ω–∞–ø–∏—Å–∞–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –±–æ—Ç–∞ (—É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–≥ –∞–∫–∫–∞—É–Ω—Ç—ã), —Ç–∞–º –∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –∏ –≤—ã

- –ú–∞–≥–∞–∑–∏–Ω –ø–æ–∫–∞ –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –≤ –Ω–µ–º –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –ø–æ–∫—É–ø–∫–∞ –∫–æ–π–Ω–æ–≤ (1 –∫–æ–π–Ω = 1 –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏)

- –ö –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ 300 –ø–µ—Å–µ–Ω –≤ –º–µ—Å—è—Ü (–∫–∞–∂–¥–æ–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞ –æ–Ω–∏ –æ–±–æ–≤–ª—è—é—Ç—Å—è + –≤ –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏—Ö –¥–æ–∫—É–ø–∞—Ç—å)

- –ü—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ

~~~~~~~~~~~

üì® –ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É - @HakerMac</strong>
'''





storage = MemoryStorage()


#mp3 menatel
#bot = Bot(token=TOKEN_HakMuz_Mp3_bot)

#tester
bot = Bot(token=TOKEN_tester_bot)


dp = Dispatcher(bot=bot, storage=storage)






class Audio_ID(StatesGroup):
    Title = State()
    Artist = State()
    Photo = State()

class Gotovo_trek(StatesGroup):
    Gotovo = State()

class AddUsers(StatesGroup):
    addState_ID = State()
    addState_Nick = State()

class DeleteUsers(StatesGroup):
    deleteState = State()

class ShowUsers(StatesGroup):
    Show = State()

class Koin_operation(StatesGroup):
    Koin_oper_nomer = State()
    Koin_oper_save = State()

class Premium_Koin_operation(StatesGroup):
    Prem_Koin_oper_nomer = State()
    Prem_Koin_oper_save = State()

class Otzovik_state(StatesGroup):
    Otzovik_State = State()
    Otzovik_Anon = State()


class Otzov_moder(StatesGroup):
    Moder_username = State()
    Moder_id_user = State()
    Moder_otzov_text = State()
    Moder_delete = State()


class Rasoslat(StatesGroup):
    rasoslat = State()

class none(StatesGroup):
    none1 = State()




# –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
@dp.message_handler(commands=['start'])
async def Start_start(message: types.Message):
    global START_TEXT

    await peremen()

    data = await Proverka1_db(message.from_user.id)

    if data is not None:
        ...

    else:
        data1 = await Premium_Proverka1_db(message.from_user.id)

        if data1 is not None:
            ...

        else:
            nick_user = f'@{message.from_user.username}'
            id_user = message.from_user.id
            Koin = 300

            await AddUser_db(nick_user, id_user, Koin)


    await message.answer(START_TEXT, parse_mode='HTML')
    await bot.send_message(chat_id="-1002238366836", text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} (tg://openmessage?user_id={message.from_user.id} ) —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π —Å—Ç–∞—Ä—Ç!')







###################################################################
# –ë–ª–æ–∫ –∞–¥–º–∏–Ω–∞ –∏ –æ–ø–µ—Ä–∞—Ü–∏—è —Å –∫–æ–π–Ω–∞–º–∏


# –ö–æ–º–∞–Ω–¥–∞ /admin, –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏
@dp.message_handler(commands=['admin'])
async def handle_admin_command(message: Message):
    global admin, ikb
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    # conn = sqlite3.connect('DataBaseUsers.sql')
    # cursor = conn.cursor()
    #
    # # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–º–µ—Ä–∞ –≤ —Ç—Ä–µ—Ç—å–µ–º —Å—Ç–æ–ª–±—Ü–µ
    # cursor.execute("SELECT * FROM users WHERE id_user = ?", (message.from_user.id,))
    # result_curr = cursor.fetchall()

    if message.from_user.id in admin:
        ikb = InlineKeyboardMarkup(row_width=2)
        button_add = InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞', callback_data='add_user')
        button_delete = InlineKeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞', callback_data='delete_user')
        button_spisok = InlineKeyboardButton('üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', callback_data='spisok_user')
        button_prem_spisok = InlineKeyboardButton('üìã –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', callback_data='spisok_prem_user')
        button_koin_uprav = InlineKeyboardButton('–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–æ–π–Ω–∞–º–∏', callback_data='koin_operation')
        button_prem_koin_uprav = InlineKeyboardButton('–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø—Ä–µ–º–∏—É–º –∫–æ–π–Ω–∞–º–∏', callback_data='prem_koin_operation')
        button_Rasoslat = InlineKeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞', callback_data='Rasoslat_operation')
        ikb.add(button_add, button_delete, button_spisok, button_prem_spisok, button_koin_uprav, button_prem_koin_uprav, button_Rasoslat)
        await bot.send_message(chat_id=message.from_user.id, text='ü§î –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=ikb)
    elif svobodno == True and message.from_user.id not in admin:
        await bot.send_message(chat_id=message.from_user.id, text='üòï –í—ã –Ω–µ –∞–¥–º–∏–Ω!')

    await bot.send_message(chat_id="-1002238366836",
                           text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É /admin!')






# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö(ID –∏ Nickneim)
@dp.message_handler(state=AddUsers.addState_ID)
async def user_id(message: types.Message, state: FSMContext):
    global id_user

    id_user = message.text.strip()

    data = await Proverka_AddUser_db(id_user)

    if data is None:
        await bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        await AddUsers.addState_Nick.set()

    else:
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='spisok_prem_user'))
        await bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", reply_markup=markup)
        await state.finish()






@dp.message_handler(state=AddUsers.addState_Nick)
async def user_nick(message: types.Message, state: FSMContext):
    global id_user, Premium_Koin

    nick_user = message.text
    Premium_Koin = 600

    await DeleteUser_db(id_user)

    await Premium_AddUser_db(nick_user, id_user, Premium_Koin)

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='spisok_prem_user'))
    await bot.send_message(chat_id=message.from_user.id, text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!", reply_markup=markup)

    await state.finish()





# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(state=DeleteUsers.deleteState)
async def delete_user(message: types.Message, state: FSMContext):
    global id_user1, nickname1

    id_user1 = message.text
    nickname1 = await Perehod_user(id_user1)
    Koin = 300

    data = await Premium_DeleteUser_db(id_user1)

    if data is None:
        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ –æ–±—ã—á–Ω—ã—Ö —á–µ–ª–æ–≤', callback_data='spisok_user'),
                   types.InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–µ–º–∏—É–º–æ–≤ —á–µ–ª–æ–≤', callback_data='spisok_prem_user'))
        await bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", reply_markup=markup)
    else:
        await AddUser_db(nickname1, id_user1, Koin)

        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(types.InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ –æ–±—ã—á–Ω—ã—Ö —á–µ–ª–æ–≤', callback_data='spisok_user'),
                   types.InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–µ–º–∏—É–º–æ–≤ —á–µ–ª–æ–≤', callback_data='spisok_prem_user'))

        await bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!", reply_markup=markup)

    await state.finish()



# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def show_users(message: types.Message, page=0):
    global Nomer_Stroki

    users = await ShowUsers_db()
    user_ids = await Rasolat()

    info = ''
    Nomer_Stroki = page * 10 + 1
    start_index = page * 10
    end_index = start_index + 10
    buttons_row = []

    current_users = users[start_index:end_index]

    try:
        for el in current_users:
            info += f'{Nomer_Stroki}) –ù–∏–∫–Ω–µ–π–º: {el[1]}, \n  - ID: {el[2]}\n - –ö–æ–π–Ω: {el[3]}\n\n'
            Nomer_Stroki += 1


        show_users_btn = types.InlineKeyboardMarkup()
        if page > 0:
            buttons_row.append(types.InlineKeyboardButton('üëà –ù–∞–∑–∞–¥', callback_data=f'admin_nazad_stranica_{page - 1}'))

        if end_index < len(users):
            buttons_row.append(types.InlineKeyboardButton('–î–∞–ª–µ–µ üëâ', callback_data=f'admin_next_stranica_{page + 1}'))

        if buttons_row:
            show_users_btn.row(*buttons_row)

        sent_message_admin = await bot.send_message(message.chat.id,
                                                text=f'‚öôÔ∏è –£–ø—Ä–∞–≤–ª—è–π—Ç–µ "—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏" –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–∑–∞–¥ –∏ –¥–∞–ª–µ–µ (–Ω–∞ –æ–¥–Ω–æ–π "—Å—Ç—Ä–∞–Ω–∏—Ü–µ" –≤—ã–≤–æ–¥—è—Ç—Å—è —Ç–æ–ª—å–∫–æ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)\n\nüìí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏(–í—Å–µ–≥–æ: {len(user_ids)}):\n\n{info}',
                                                reply_markup=show_users_btn)
        saved_message_id_admin = sent_message_admin.message_id
        await delete_message_admin_save(message.chat.id, saved_message_id_admin)

    except:
        await message.answer('- –û–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç!')





# –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def Prem_show_users(message: types.Message):
    global Nomer_Stroki

    users = await Premium_ShowUsers_db()

    info = ''
    Nomer_Stroki = 1

    try:
        for el in users:
            info += f'{Nomer_Stroki}) –ù–∏–∫–Ω–µ–π–º: {el[1]}, \n ID: {el[2]}, \n –ü—Ä–µ–º–∏—É–º –∫–æ–π–Ω: {el[3]}\n\n'
            Nomer_Stroki += 1

        await message.answer(info)
    except:
        await message.answer('- –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç!')




# –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–π–Ω–æ–≤ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü
async def time_obnul_one():
    while True:
        today = datetime.datetime.now()
        if today.day == 1:
            await premium_time_one_day()
            await time_one_day()

        await asyncio.sleep(3600) # –∫–æ–π–Ω—ã –æ–±–Ω–æ–≤—è—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞




# –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–æ–π–Ω–∞–º–∏
async def Koin_Operations(message: types.Message):
    global Nomer_Stroki

    users = await ShowUsers_db()

    info = ''
    Nomer_Stroki = 1

    try:
        for el in users:
            info += f'{Nomer_Stroki}) –ù–∏–∫–Ω–µ–π–º: {el[1]}, \n ID: {el[2]}, \n –ö–æ–π–Ω: {el[3]}\n\n'
            Nomer_Stroki += 1

        await message.answer(info)
    except:
        await message.answer('- –û–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç!')

    await message.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    await Koin_operation.Koin_oper_nomer.set()




@dp.message_handler(state=Koin_operation.Koin_oper_nomer)
async def Koin_Operations_nomer(message: types.Message):
    global id_input_user


    id_input_user = int(message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–π–Ω–æ–≤:')
    await Koin_operation.next()




@dp.message_handler(state=Koin_operation.Koin_oper_save)
async def Koin_operation_Save(message: types.Message, state: FSMContext):
    global id_input_user

    new_Koin = message.text

    await Koin_Save_in_operation(int(new_Koin), id_input_user)

    await message.answer('–ö–æ–π–Ω—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')

    await state.finish()




# –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø—Ä–µ–º–∏—É–º –∫–æ–π–Ω–∞–º–∏
async def Premium_Koin_Operations(message: types.Message):
    global Nomer_Stroki

    users = await Premium_ShowUsers_db()

    info = ''
    Nomer_Stroki = 1

    try:
        for el in users:
            info += f'{Nomer_Stroki}) –ù–∏–∫–Ω–µ–π–º: {el[1]}, \n ID: {el[2]}, \n –ü—Ä–µ–º–∏—É–º –∫–æ–π–Ω: {el[3]}\n\n'
            Nomer_Stroki += 1

        await message.answer(info)
    except:
        await message.answer('- –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç!')

    await message.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    await Premium_Koin_operation.Prem_Koin_oper_nomer.set()





@dp.message_handler(state=Premium_Koin_operation.Prem_Koin_oper_nomer)
async def Premium_Koin_Operations_nomer(message: types.Message):
    global Prem_id_input_user


    Prem_id_input_user = int(message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–º–∏—É–º –∫–æ–π–Ω–æ–≤:')
    await Premium_Koin_operation.Prem_Koin_oper_save.set()





@dp.message_handler(state=Premium_Koin_operation.Prem_Koin_oper_save)
async def Koin_operation_Save(message: types.Message, state: FSMContext):
    global Prem_id_input_user

    new_Prem_Koin = message.text

    await Premium_Koin_Save_in_Operation(int(new_Prem_Koin), Prem_id_input_user)

    await message.answer('–ü—Ä–µ–º–∏—É–º –∫–æ–π–Ω—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')

    await state.finish()


# –†–∞—Å—Å—ã–ª–∫–∞ –≤ –±–æ—Ç–µ
@dp.message_handler(state=Rasoslat.rasoslat)
async def process_message(message: types.Message, state: FSMContext):
    text_to_send = message.text
    user_ids = await Rasolat()

    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞...')

    kol = 0

    for user_id in user_ids:
        try:
            await bot.send_message(chat_id=user_id[0], text=text_to_send)
            kol += 1
        except:
            ...

    await message.answer(f"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {kol}")
    await state.finish()









############################################################################
#–ë–ª–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@dp.message_handler(commands=['profile'])
async def Update_Profile_User(message: types.Message):

    Koin = await Koin_dovnload(message.chat.id)
    Koin = ''.join([i for i in str(Koin) if i.isdigit()])
    Premium_Koin = await Premium_Koin_dovnload(message.chat.id)
    Premium_Koin = ''.join([i for i in str(Premium_Koin) if i.isdigit()])

    await bot.send_message(chat_id="-1002238366836",
                           text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞—à–µ–ª –≤ –ø—Ä–æ—Ñ–∏–ª—å!')
    await Profile_User(message, Koin, Premium_Koin)



async def Profile_User(message: types.Message, Koin, Premium_Koin):
    prof_kb = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('üí∞ –ú–∞–≥–∞–∑–∏–Ω', callback_data='premium_user')
    btn2 = types.InlineKeyboardButton('üî• –û—Ç–∑—ã–≤—ã', callback_data='show_otzovik_btn')
    prof_kb.add(btn2, btn1)

    prem_prof_kb = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('üî• –û—Ç–∑—ã–≤—ã', callback_data='show_otzovik_btn')
    prem_prof_kb.add(btn1)




    PROFILE_TEXT = f'''
üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:

~~~~~~~~~~~~

üèÜ –°—Ç–∞—Ç—É—Å: <em>–û–±—ã—á–Ω—ã–π</em>

üéß –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–µ—Å–µ–Ω –Ω–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü: <em>{Koin}</em>
    '''

    PREMIUM_PROFILE_TEXT = f'''
üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:

~~~~~~~~~~~~

üèÜ –°—Ç–∞—Ç—É—Å: <em>–ü—Ä–µ–º–∏—É–º ‚ú®</em>

üéß –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–µ—Å–µ–Ω –Ω–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü: <em>{Premium_Koin}</em>
        '''

    data = await Proverka1_db(message.chat.id)

    if data is None:
        data1 = await Premium_Koin_dovnload(message.chat.id)

        if data1 is None:
            await Dobav_user(message)
            await Profile_User(message, Koin, Premium_Koin)
        else:
            await message.answer(PREMIUM_PROFILE_TEXT, reply_markup=prof_kb, parse_mode='HTML')
            await bot.send_message(chat_id="-1002238366836",
                                   text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username}  (tg://openmessage?user_id={message.chat.id} )–Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –æ—Ç–∑—ã–≤—ã')
    else:
        await message.answer(PROFILE_TEXT, reply_markup=prof_kb, parse_mode='HTML')
        await bot.send_message(chat_id="-1002238366836",
                               text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username}  (tg://openmessage?user_id={message.chat.id} )–Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –æ—Ç–∑—ã–≤—ã')





async def PremiumFunc(message: types.Message):
    premium_kb = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton('üîö –ù–∞–∑–∞–¥', callback_data='premium_nazad')
    # btn2 = types.InlineKeyboardButton('üí∏ –ö—É–ø–∏—Ç—å', url='https://t.me/m/4CcTlt2wM2Zi')
    premium_kb.add(btn1)

    PREMIUM_PROF_TEXT = '''
‚ú® –ú–∞–≥–∞–∑–∏–Ω:

1) –ü—Ä–µ–º–∏—É–º - ...   
- 600 –ø–µ—Å–µ–Ω –≤ –º–µ—Å—è—Ü, –≤–º–µ—Å—Ç–æ 300

2) –ö–æ–π–Ω—ã:

(–±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ...)
    '''
    await message.delete()
    await message.answer(PREMIUM_PROF_TEXT, reply_markup=premium_kb)

    await bot.send_message(chat_id="-1002238366836",
                           text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ—à–µ–ª –≤–æ –∫–ª–∞–¥–∫—É –∫—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º!')





async def Dobav_user(message:types.Message):
    nick_user = f'@{message.from_user.username}'
    id_user = message.from_user.id
    Koin = 300

    await AddUser_db(nick_user, id_user, Koin)







############################################################################
# –ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ




# –§—É–Ω–∫—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
async def button():
    inline_markup = types.InlineKeyboardMarkup(row_width=3)
    inline_markup.add(types.InlineKeyboardButton('üéß –ù–∞–∑–≤–∞–Ω–∏–µ', callback_data='nasvanie_trek'),
                      types.InlineKeyboardButton('üë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', callback_data='ispolnit_trek'),
                      types.InlineKeyboardButton('üñºÔ∏è –û–±–ª–æ–∂–∫–∞', callback_data='photo_trek'),
                      types.InlineKeyboardButton('üö™ –í—ã—Ö–æ–¥', callback_data='delete_trek'),
                      types.InlineKeyboardButton('‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data='gotovo_trek'))

    return inline_markup



@dp.message_handler(content_types=['audio'])
async def Proverka1(message: types.Message):

    user_id_db = message.chat.id

    user_channel_status = await bot.get_chat_member(chat_id='@HakerMac_IT', user_id=user_id_db)
    user_channel_status_2 = await bot.get_chat_member(chat_id='@waislime', user_id=user_id_db)

    if user_channel_status['status'] != 'left':

        if user_channel_status_2['status'] != 'left':

            data = await Proverka1_db(user_id_db)

            if data is not None:

                Koin = await Koin_dovnload(user_id_db)
                Koin = int(''.join([i for i in str(Koin) if i.isdigit()]))

                if Koin > 0:
                    Koin -= 1
                    await Koin_Save(Koin, user_id_db)
                    await download_audio(message)
                else:
                    proverka_prem_rb = types.InlineKeyboardMarkup()
                    proverka_prem_rb.add(types.InlineKeyboardButton('–ü—Ä–µ–º–∏—É–º', callback_data='premium_user'))

                    await message.answer('–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∫–æ–π–Ω—ã!\n\n–ö—É–ø–∏—Ç–µ –ø—Ä–µ–º–∏—É–º, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω—è—Ç—å –±–æ–ª—å—à–µ –ø–µ—Å–µ–Ω –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö!',
                                         reply_markup=proverka_prem_rb)
                await bot.send_message(chat_id="-1002238366836",
                                       text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (@{message.from_user.username}) (tg://openmessage?user_id={message.from_user.id} ) —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∞—É–¥–∏–æ!')
            else:
                data1 = await Premium_Proverka1_db(user_id_db)


                if data1 is not None:
                    Premium_Koin = await Premium_Koin_dovnload(user_id_db)
                    Premium_Koin = int(''.join([i for i in str(Premium_Koin) if i.isdigit()]))

                    if Premium_Koin > 0:
                        Premium_Koin -= 1
                        await Premium_Koin_Save(Premium_Koin, user_id_db)
                        await download_audio(message)
                    else:
                        await message.answer('–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∫–æ–π–Ω—ã!\n\n–ü—Ä–∏–¥–µ—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö!')

                    await bot.send_message(chat_id="-1002238366836",
                                           text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (@{message.from_user.username}) (tg://openmessage?user_id={message.from_user.id} ) —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∞—É–¥–∏–æ!')


                else:
                    nick_user = f'@{message.from_user.username}'
                    id_user = message.from_user.id
                    Koin = 300

                    await AddUser_db(nick_user, id_user, Koin)

                    await Proverka1(message)

        else:
            podpis_Waislime = types.InlineKeyboardMarkup()
            podpis_Waislime.add(types.InlineKeyboardButton('üì± –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/waislime'))

            await bot.send_message(message.from_user.id,
                                   '‚ÄºÔ∏è –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, —Ç–∞–∫–∂–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª —Å–ø–æ–Ω—Å–æ—Ä–∞ - waislime ‚ÄºÔ∏è\n\n–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Å–Ω—é –±–æ—Ç—É –µ—â–µ —Ä–∞–∑!',
                                   reply_markup=podpis_Waislime)

            await bot.send_message(chat_id="-1002238366836",
                                   text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} (tg://openmessage?user_id={message.from_user.id} ) —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Waislime!')


    else:
        if user_channel_status_2['status'] != 'left':

            podpis = types.InlineKeyboardMarkup()
            podpis.add(types.InlineKeyboardButton('üì± –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/HakerMac_IT'))

            await bot.send_message(message.from_user.id, '‚ÄºÔ∏è –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª - HakerMac IT ‚ÄºÔ∏è\n\n–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Å–Ω—é –±–æ—Ç—É –µ—â–µ —Ä–∞–∑!',
                                   reply_markup=podpis)

            await bot.send_message(chat_id="-1002238366836",
                                   text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} (tg://openmessage?user_id={message.from_user.id} ) —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ HakerMac!')
        else:
            podpis = types.InlineKeyboardMarkup()
            podpis.add(types.InlineKeyboardButton('üì± –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/HakerMac_IT'),
                       types.InlineKeyboardButton('üì± –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/waislime'))

            await bot.send_message(message.from_user.id,
                                   '‚ÄºÔ∏è –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª - HakerMac IT –∏ –∫–∞–Ω–∞–ª —Å–ø–æ–Ω—Å–æ—Ä–∞ - waislime ‚ÄºÔ∏è\n\n–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Å–Ω—é –±–æ—Ç—É –µ—â–µ —Ä–∞–∑. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!',
                                   reply_markup=podpis)

            await bot.send_message(chat_id="-1002238366836",
                                   text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} (tg://openmessage?user_id={message.from_user.id} ) —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã!')






async def download_audio(message: types.Message):

    await Delete_peremen(message.chat.id)
    title1 = await Show_title(message.chat.id)
    artist1 = await Show_artist(message.chat.id)

    sent_message_1 = await message.answer('üì• –ü—Ä–∏—Å—Ç—É–ø–∞—é –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é —Ç—Ä–µ–∫–∞, –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è!!\n\n‚ùóÔ∏è –ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —Ç–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±—É - @HakerMac')
    saved_message_id_1 = sent_message_1.message_id


    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
    file_id = message.audio.file_id
    file_info = await bot.get_file(file_id)
    await file_id_save(message.from_user.id, file_id)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
    downloaded_file = await bot.download_file(file_info.file_path)

    with open(f"{message.audio.file_id}.mp3", 'wb') as new_file:
        new_file.write(downloaded_file.getvalue())

    await bot.send_audio(chat_id="-1002238366836", audio=file_id)

    await bot.delete_message(message.chat.id, saved_message_id_1)


    await bot.send_message(message.chat.id, f'‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.')


    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–µ—Å–Ω–∏
    sent_message_2 = await bot.send_message(chat_id=message.chat.id,
                     text=f'üéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                     reply_markup=await button())
    saved_message_id_2 = sent_message_2.message_id

    await delete_message_2_save(message.chat.id, saved_message_id_2)






# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Å–Ω–∏
@dp.message_handler(state=Audio_ID.Title)
async def handle_title(message: types.Message, state: FSMContext):

    if message.text == '/cancel':
        await bot.send_message(chat_id="-1002238366836", text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({message.chat.id}) –Ω–∞–∂–∞–ª –æ—Ç–º–µ–Ω—É –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ –ø–µ—Å–Ω–∏')
        await delete_message_0_save(message.chat.id, message.message_id)

        saved_message_id_0 = await Show_delete_message_0(message.chat.id)
        saved_message_id_1 = await Show_delete_message_1(message.chat.id)
        saved_message_id_2 = await Show_delete_message_2(message.chat.id)

        await bot.delete_message(message.chat.id, saved_message_id_0)
        await bot.delete_message(message.chat.id, saved_message_id_1)
        await bot.delete_message(message.chat.id, saved_message_id_2)

        title1 = await Show_title(message.chat.id)
        artist1 = await Show_artist(message.chat.id)
        photo_status1 = await Show_photo_status(message.chat.id)
        photo_path1 = await Show_photo_path(message.chat.id)

        if photo_status1 == 1:
            sent_message_2 = await bot.send_photo(chat_id=message.chat.id,
                                                  photo=open(photo_path1, 'rb'),
                                                  caption=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                  reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)
        else:
            sent_message_2 = await bot.send_message(chat_id=message.chat.id,
                                                    text=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                    reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)

        await state.finish()

    else:
        title = message.text
        await bot.send_message(chat_id="-1002238366836",
                               text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({message.chat.id}) –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª —Ç—Ä–µ–∫ - {title}')
        await delete_message_0_save(message.chat.id, message.message_id)

        saved_message_id_0 = await Show_delete_message_0(message.chat.id)
        saved_message_id_1 = await Show_delete_message_1(message.chat.id)
        saved_message_id_2 = await Show_delete_message_2(message.chat.id)

        await bot.delete_message(message.chat.id, saved_message_id_0)
        await bot.delete_message(message.chat.id, saved_message_id_1)
        await bot.delete_message(message.chat.id, saved_message_id_2)

        await title_save(message.chat.id, title)

        title1 = await Show_title(message.chat.id)
        artist1 = await Show_artist(message.chat.id)
        photo_status1 = await Show_photo_status(message.chat.id)
        photo_path1 = await Show_photo_path(message.chat.id)



        if photo_status1 == 1:
            sent_message_2 = await bot.send_photo(chat_id=message.chat.id,
                                                  photo=open(photo_path1, 'rb'),
                                                  caption=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                  reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)
        else:
            sent_message_2 = await bot.send_message(chat_id=message.chat.id,
                                                    text=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                    reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)


        await state.finish()





# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
@dp.message_handler(state=Audio_ID.Artist)
async def handle_artist(message: types.Message, state: FSMContext):

    if message.text == '/cancel':
        await bot.send_message(chat_id="-1002238366836",
                               text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({message.chat.id}) –Ω–∞–∂–∞–ª –æ—Ç–º–µ–Ω—É –ø—Ä–∏ –∏–∑–º–µ–Ω–Ω–µ–Ω–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è')

        await delete_message_0_save(message.chat.id, message.message_id)

        saved_message_id_0 = await Show_delete_message_0(message.chat.id)
        saved_message_id_1 = await Show_delete_message_1(message.chat.id)
        saved_message_id_2 = await Show_delete_message_2(message.chat.id)

        await bot.delete_message(message.chat.id, saved_message_id_0)
        await bot.delete_message(message.chat.id, saved_message_id_1)
        await bot.delete_message(message.chat.id, saved_message_id_2)

        title1 = await Show_title(message.chat.id)
        artist1 = await Show_artist(message.chat.id)
        photo_status1 = await Show_photo_status(message.chat.id)
        photo_path1 = await Show_photo_path(message.chat.id)

        if photo_status1 == 1:
            sent_message_2 = await bot.send_photo(chat_id=message.chat.id,
                                                  photo=open(photo_path1, 'rb'),
                                                  caption=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                  reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)
        else:
            sent_message_2 = await bot.send_message(chat_id=message.chat.id,
                                   text=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                   reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)

        await state.finish()
    else:
        artist = message.text
        await bot.send_message(chat_id="-1002238366836",
                               text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({message.chat.id}) –∏–∑–º–µ–Ω–∏–ª –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è - {artist}')
        await delete_message_0_save(message.chat.id, message.message_id)

        saved_message_id_0 = await Show_delete_message_0(message.chat.id)
        saved_message_id_1 = await Show_delete_message_1(message.chat.id)
        saved_message_id_2 = await Show_delete_message_2(message.chat.id)

        await bot.delete_message(message.chat.id, saved_message_id_0)
        await bot.delete_message(message.chat.id, saved_message_id_1)
        await bot.delete_message(message.chat.id, saved_message_id_2)

        await artist_save(message.chat.id, artist)

        title1 = await Show_title(message.chat.id)
        artist1 = await Show_artist(message.chat.id)
        photo_status1 = await Show_photo_status(message.chat.id)
        photo_path1 = await Show_photo_path(message.chat.id)

        if photo_status1 == 1:
            sent_message_2 = await bot.send_photo(chat_id=message.chat.id,
                                                  photo=open(photo_path1, 'rb'),
                                                  caption=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                  reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)
        else:
            sent_message_2 = await bot.send_message(chat_id=message.chat.id,
                                                    text=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                    reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)

        await state.finish()


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
@dp.message_handler(content_types=['photo'])
async def handle_photo(message: types.Message, state: FSMContext):
    photo_otprav1 = await Show_photo_otprav(message.chat.id)

    if photo_otprav1 == 1:
        await bot.send_message(chat_id="-1002238366836",
                               text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({message.chat.id}) –∏–∑–º–µ–Ω–∏–ª —Ñ–æ—Ç–æ')
        await bot.send_photo(chat_id="-1002238366836", photo=message.photo[-1].file_id)
        photo_file_id = message.photo[-1].file_id
        await delete_message_0_save(message.chat.id, message.message_id)

        saved_message_id_0 = await Show_delete_message_0(message.chat.id)
        saved_message_id_1 = await Show_delete_message_1(message.chat.id)
        saved_message_id_2 = await Show_delete_message_2(message.chat.id)

        await photo_otprav_save(message.chat.id, 0)
        await photo_status_save(message.chat.id, 1)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id —Ñ–æ—Ç–æ-—Ñ–∞–π–ª–∞
        photo_file = await bot.get_file(photo_file_id)
        photo_path = f"photo_{message.chat.id}.jpg"
        await bot.download_file(photo_file.file_path, photo_path)

        await photo_path_save(message.chat.id, photo_path)

        title1 = await Show_title(message.chat.id)
        artist1 = await Show_artist(message.chat.id)
        photo_status1 = await Show_photo_status(message.chat.id)
        photo_path1 = await Show_photo_path(message.chat.id)

        await bot.delete_message(message.chat.id, saved_message_id_0)
        await bot.delete_message(message.chat.id, saved_message_id_1)
        await bot.delete_message(message.chat.id, saved_message_id_2)

        if photo_status1 == 1:
            sent_message_2 = await bot.send_photo(chat_id=message.chat.id,
                                                  photo=open(photo_path1, 'rb'),
                                                  caption=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                  reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)
        else:
            sent_message_2 = await bot.send_message(chat_id=message.chat.id,
                                                    text=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                    reply_markup=await button())
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)







# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
async def send_saved_audio(message: types.Message, state: FSMContext):

    saved_message_id_2 = await Show_delete_message_2(message.chat.id)
    await bot.delete_message(message.chat.id, saved_message_id_2)

    file_id = await Show_file_id(message.chat.id)
    title = await Show_title(message.chat.id)
    artist = await Show_artist(message.chat.id)
    photo_status = await Show_photo_status(message.chat.id)
    photo_path = await Show_photo_path(message.chat.id)

    if photo_status == 1:

        try:
            audiofile = eyed3.load(f"{file_id}.mp3")
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–≥–∞, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            if audiofile.tag is None:
                audiofile.initTag()

            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–ª–æ–∂–∫–∏
            # with open(photo_path, 'rb') as img_file:
            #     audiofile.tag.images.set(3, img_file.read(), 'image/jpeg')

            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤
            audiofile.tag.artist = artist
            audiofile.tag.title = title

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∞—É–¥–∏–æ—Ñ–∞–π–ª–µ
            audiofile.tag.save()

            audio = MP3(f"{file_id}.mp3", ID3=ID3)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —Ç–µ–≥–∏, –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö, –µ—Å–ª–∏ –Ω–µ—Ç
            if not audio.tags:
                audio.add_tags()

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            with open(f"photo_{message.chat.id}.jpg", 'rb') as img:
                # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                img_data = img.read()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ–±–ª–æ–∂–∫–∞
                if APIC in audio.tags:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –æ–±–ª–æ–∂–∫—É
                    audio.tags[APIC].data = img_data
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –æ–±–ª–æ–∂–∫—É
                    audio.tags.add(APIC(
                        encoding=3,
                        mime='image/jpeg',
                        type=3,
                        desc='Cover',
                        data=img_data
                    ))

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            audio.save()

            os.rename(f"{file_id}.mp3", f"{title}.mp3")

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            with open(f"{title}.mp3", 'rb') as audio_file:
                await bot.send_audio(chat_id=message.chat.id, audio=audio_file, thumb=open(f"photo_{message.chat.id}.jpg", 'rb'))
            with open(f"{title}.mp3", 'rb') as audio_file:
                await bot.send_audio(chat_id="-1002238366836", audio=audio_file, thumb=open(f"photo_{message.chat.id}.jpg", 'rb'))





        except:
            audio = AudioSegment.from_file(f"{file_id}.mp3")
            audio.export(f"{file_id}.mp3", format='mp3')

            audiofile = eyed3.load(f"{file_id}.mp3")
            if audiofile.tag is None:
                audiofile.initTag()
            # audiofile.tag.images.set(3, open(photo_path, 'rb').read(), 'image/jpeg')
            audiofile.tag.artist = artist
            audiofile.tag.title = title
            audiofile.tag.save()
            audiofile.tag.frame_set = None

            audio = MP3(f"{file_id}.mp3", ID3=ID3)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —Ç–µ–≥–∏, –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö, –µ—Å–ª–∏ –Ω–µ—Ç
            if not audio.tags:
                audio.add_tags()

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            with open(f"photo_{message.chat.id}.jpg", 'rb') as img:
                # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                img_data = img.read()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ–±–ª–æ–∂–∫–∞
                if APIC in audio.tags:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –æ–±–ª–æ–∂–∫—É
                    audio.tags[APIC].data = img_data
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –æ–±–ª–æ–∂–∫—É
                    audio.tags.add(APIC(
                        encoding=3,
                        mime='image/jpeg',
                        type=3,
                        desc='Cover',
                        data=img_data
                    ))

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            audio.save()

            os.rename(f"{file_id}.mp3", f"{title}.mp3")


            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—É—é –ø–µ—Å–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            with open(f"{title}.mp3", 'rb') as audio_file:
                await bot.send_audio(chat_id=message.chat.id, audio=audio_file, thumb=open(f"photo_{message.chat.id}.jpg", 'rb'))
            with open(f"{title}.mp3", 'rb') as audio_file:
                await bot.send_audio(chat_id="-1002238366836", audio=audio_file, thumb=open(f"photo_{message.chat.id}.jpg", 'rb'))


        os.remove(f"{title}.mp3")
        os.remove(f"photo_{message.chat.id}.jpg")

    else:
        try:


            audiofile = eyed3.load(f"{file_id}.mp3")
            if audiofile.tag is None:
                audiofile.initTag()
            audiofile.tag.artist = artist
            audiofile.tag.title = title
            audiofile.tag.save()
            audiofile.tag.frame_set = None

            os.rename(f"{file_id}.mp3", f"{title}.mp3")

            with open(f"{title}.mp3", "rb") as file_to_send:
                await bot.send_audio(chat_id=message.chat.id, audio=file_to_send)
            with open(f"{title}.mp3", "rb") as file_to_send:
                await bot.send_audio(chat_id="-1002238366836", audio=file_to_send)


        except:
            audio = AudioSegment.from_file(f"{file_id}.mp3")
            audio.export(f"{file_id}.mp3", format='mp3')


            audiofile = eyed3.load(f"{file_id}.mp3")
            if audiofile.tag is None:
                audiofile.initTag()
            audiofile.tag.artist = artist
            audiofile.tag.title = title
            audiofile.tag.save()
            audiofile.tag.frame_set = None

            os.rename(f"{file_id}.mp3", f"{title}.mp3")

            with open(f"{title}.mp3", "rb") as file_to_send:
                await bot.send_audio(chat_id=message.chat.id, audio=file_to_send)
            with open(f"{title}.mp3", "rb") as file_to_send:
                await bot.send_audio(chat_id="-1002238366836", audio=file_to_send)

        os.remove(f"{title}.mp3")


    await bot.send_message(chat_id="-1002238366836",
                           text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({message.chat.id})—Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª –ø–µ—Å–Ω—é!')

    otzovik = types.InlineKeyboardMarkup()
    otzovik.add(types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ –±–æ—Ç–µ', callback_data='otzovik_btn'))

    otzov_flag = await otzovik_Proverka(message.from_user.id)

    if otzov_flag == 1:
        await message.answer('üòä –ß—Ç–æ–±—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –ø–µ—Å–Ω—é, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –µ–µ!', reply_markup=otzovik)

    else:
        await message.answer('üòä –ß—Ç–æ–±—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –ø–µ—Å–Ω—é, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –µ–µ!')





async def Delete_Treck(message: types.Message):

    file_id = await Show_file_id(message.chat.id)
    saved_message_id_2 = await Show_delete_message_2(message.chat.id)

    await bot.delete_message(message.chat.id, saved_message_id_2)
    os.remove(f"{file_id}.mp3")

    await Delete_peremen(message.chat.id)

    await message.answer('‚ùóÔ∏è –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–µ—Å—Å–∏–∏\n\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—Ä–µ–∫, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ø–µ—Å–Ω—é.')

    await bot.send_message(chat_id="-1002238366836",
                           text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ—Å—Ä–æ—á–Ω–æ –≤—ã—à–µ–ª –∏–∑ —Å–µ—Å—Å–∏–∏!')





##########################################################
# –ë–ª–æ–∫ –û—Ç–∑—ã–≤–æ–≤




@dp.message_handler(state=Otzovik_state.Otzovik_State)
async def Otzovik_func(message: types.Message, state: FSMContext):

        if message.text == '/cancel':
            await delete_message_0_save(message.chat.id, message.message_id)

            saved_message_id_0 = await Show_delete_message_0(message.chat.id)
            saved_message_id_1 = await Show_delete_message_1(message.chat.id)

            await bot.delete_message(message.chat.id, saved_message_id_0)
            await bot.delete_message(message.chat.id, saved_message_id_1)

        else:

            otzov_user = message.text
            otzov_message_id = message.message_id
            otzov_user_id = message.chat.id
            otzov_nick_user = message.from_user.username

            await delete_message_0_save(message.chat.id, otzov_message_id)

            await Public_Otzov_save(otzov_nick_user, otzov_user_id, otzov_user)

            anon_btn = types.InlineKeyboardMarkup()
            anon_btn.add(types.InlineKeyboardButton('–ü—É–±–ª–∏—á–Ω–æ', callback_data='public_moder_user'),
                         types.InlineKeyboardButton('–ê–Ω–æ–Ω–∏–º–Ω–æ', callback_data='anon_moder_user'))

            message_otzov = await bot.send_message(chat_id=message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤:\n\n–ü—É–±–ª–∏—á–Ω–æ - –≤ –æ—Ç–∑—ã–≤–µ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à —Ç–≥ –∞–∫–∫–∞—É–Ω—Ç'
                                                    '\n\n–ê–Ω–æ–Ω–∏–º–Ω–æ - –≤–º–µ—Å—Ç–æ —Å—Å—ã–ª–∫–∏ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–æ –ø—Ä–æ—Å—Ç–æ "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"\n\n', reply_markup=anon_btn)
            message_otzov_id =message_otzov.message_id

            await delete_message_2_save(message.chat.id, message_otzov_id)

        await state.finish()





async def show_users_otzov(message: types.Message, page=0):

    otzov_flag = await otzovik_Proverka(message.chat.id)
    users = await ShowUsers_otzovik_db()

    info = ''
    Nomer_Stroki = page * 10 + 1
    start_index = page * 10
    end_index = start_index + 10
    buttons_row = []

    current_users = users[start_index:end_index]



    try:
        for el in current_users:
                info += f'{Nomer_Stroki}) –ù–∏–∫–Ω–µ–π–º: @{el[1]}, \n  - {el[3]}\n\n'
                Nomer_Stroki += 1



        if otzov_flag == 1:
            show_users_otzov_btn = types.InlineKeyboardMarkup()
            if page > 0:
                buttons_row.append(types.InlineKeyboardButton('üëà –ù–∞–∑–∞–¥', callback_data=f'nazad_stranica_{page - 1}'))

            if end_index < len(users):
                buttons_row.append(types.InlineKeyboardButton('–î–∞–ª–µ–µ üëâ', callback_data=f'next_stranica_{page + 1}'))

            if buttons_row:
                show_users_otzov_btn.row(*buttons_row)

            show_users_otzov_btn.add(types.InlineKeyboardButton('üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤', callback_data='otzovik_btn'))

            sent_message_2 = await bot.send_message(message.chat.id, text=f'‚öôÔ∏è –£–ø—Ä–∞–≤–ª—è–π—Ç–µ "—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏" –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–∑–∞–¥ –∏ –¥–∞–ª–µ–µ (–Ω–∞ –æ–¥–Ω–æ–π "—Å—Ç—Ä–∞–Ω–∏—Ü–µ" –≤—ã–≤–æ–¥—è—Ç—Å—è —Ç–æ–ª—å–∫–æ 10 –æ—Ç–∑—ã–≤–æ–≤)\n\n–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –∂–º–∏—Ç–µ "–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤"\n\nüìí –û—Ç–∑—ã–≤—ã:\n\n{info}', reply_markup=show_users_otzov_btn)
            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)


        elif otzov_flag == 0:
            show_users_otzov_btn_2 = types.InlineKeyboardMarkup()
            if page > 0:
                buttons_row.append(types.InlineKeyboardButton('üëà –ù–∞–∑–∞–¥', callback_data=f'nazad_stranica_{page - 1}'))

            if end_index < len(users):
                buttons_row.append(types.InlineKeyboardButton('–î–∞–ª–µ–µ üëâ', callback_data=f'next_stranica_{page + 1}'))

            if buttons_row:
                show_users_otzov_btn_2.row(*buttons_row)

            show_users_otzov_btn_2.add(types.InlineKeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data='delete_otzov'))

            sent_message_2 = await bot.send_message(message.chat.id,
                                                    text=f'‚öôÔ∏è –£–ø—Ä–∞–≤–ª—è–π—Ç–µ "—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏" –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–∑–∞–¥ –∏ –¥–∞–ª–µ–µ (–Ω–∞ –æ–¥–Ω–æ–π "—Å—Ç—Ä–∞–Ω–∏—Ü–µ" –≤—ã–≤–æ–¥—è—Ç—Å—è —Ç–æ–ª—å–∫–æ 10 –æ—Ç–∑—ã–≤–æ–≤)\n\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ –Ω–∞–∂–º–∏—Ç–µ "–£–¥–∞–ª–∏—Ç—å"\n\nüìí –û—Ç–∑—ã–≤—ã:\n\n{info}',
                                                    reply_markup=show_users_otzov_btn_2)

            saved_message_id_2 = sent_message_2.message_id
            await delete_message_2_save(message.chat.id, saved_message_id_2)
    except:
        show_users_otzov_btn = types.InlineKeyboardMarkup()
        show_users_otzov_btn.add(types.InlineKeyboardButton('üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤', callback_data='otzovik_btn'))

        await message.answer('–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç!', reply_markup=show_users_otzov_btn)










@dp.callback_query_handler(lambda callback: callback.data.startswith('next_stranica_'))
async def handle_next_page(callback: types.CallbackQuery):
    saved_message_id_2 = await Show_delete_message_2(callback.message.chat.id)
    page = int(callback.data.split('_')[-1])
    await show_users_otzov(callback.message, page)
    await bot.delete_message(callback.message.chat.id, saved_message_id_2)

@dp.callback_query_handler(lambda callback: callback.data.startswith('nazad_stranica_'))
async def handle_next_page(callback: types.CallbackQuery):
    delete_message_2 = await Show_delete_message_2(callback.message.chat.id)
    await bot.delete_message(callback.message.chat.id, delete_message_2)
    page = int(callback.data.split('_')[-1])
    await show_users_otzov(callback.message, page)



@dp.callback_query_handler(lambda callback: callback.data.startswith('admin_next_stranica_'))
async def handle_next_page_admin(callback: types.CallbackQuery):
    saved_message_id_admin = await Show_delete_message_admin(callback.message.chat.id)
    page = int(callback.data.split('_')[-1])
    await show_users(callback.message, page)
    await bot.delete_message(callback.message.chat.id, saved_message_id_admin)

@dp.callback_query_handler(lambda callback: callback.data.startswith('admin_nazad_stranica_'))
async def handle_next_page_admin(callback: types.CallbackQuery):
    delete_message_admin = await Show_delete_message_admin(callback.message.chat.id)
    page = int(callback.data.split('_')[-1])
    await show_users(callback.message, page)
    await bot.delete_message(callback.message.chat.id, delete_message_admin)



# callback —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler()
async def handle_ready_track(callback: CallbackQuery, state: FSMContext):
    global otzov_message_1

    if callback.data == 'spisok_user':
        await callback.message.answer('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üëá')
        await show_users(callback.message)

    elif callback.data == 'spisok_prem_user':
        await callback.message.answer('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üëá')
        await Prem_show_users(callback.message)


    elif callback.data == 'delete_user':
        await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
        await DeleteUsers.deleteState.set()

    elif callback.data == 'add_user':
        await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
        await AddUsers.addState_ID.set()

    elif callback.data == 'gotovo_trek':
        await bot.send_message(callback.message.chat.id, "üî• –ì–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª:", reply_markup=types.ReplyKeyboardRemove())
        await send_saved_audio(callback.message, state)

    elif callback.data == 'ispolnit_trek':
        sent_message_1 = await bot.send_message(callback.message.chat.id, "üë• –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:\n\n–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã - /cancel")
        saved_message_id_1 = sent_message_1.message_id
        await delete_message_1_save(callback.message.chat.id, saved_message_id_1)
        await Audio_ID.Artist.set()

    elif callback.data == 'nasvanie_trek':
        sent_message_1 = await bot.send_message(callback.message.chat.id, "üéß –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞:\n\n–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã - /cancel")
        saved_message_id_1 = sent_message_1.message_id
        await delete_message_1_save(callback.message.chat.id, saved_message_id_1)
        await Audio_ID.Title.set()

    elif callback.data == 'photo_trek':
        photo_status = await Show_photo_status(callback.message.chat.id)

        photo_markup = types.InlineKeyboardMarkup(row_width=1)
        photo_markup.add(types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='otmena_photo'))

        photo_markup_Status = types.InlineKeyboardMarkup(row_width=2)
        photo_markup_Status.add(types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='otmena_photo'),
                          types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ', callback_data='delete_photo'))

        if photo_status == 1:
            sent_message_1 = await bot.send_message(callback.message.chat.id, "üéß –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –æ–±–ª–æ–∂–∫–∏:", reply_markup=photo_markup_Status)
            saved_message_id_1 = sent_message_1.message_id
        else:
            sent_message_1 = await bot.send_message(callback.message.chat.id, "üéß –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –æ–±–ª–æ–∂–∫–∏:", reply_markup=photo_markup)
            saved_message_id_1 = sent_message_1.message_id
        photo_otprav = 1
        await photo_otprav_save(callback.message.chat.id, photo_otprav)
        await delete_message_1_save(callback.message.chat.id, saved_message_id_1)

    elif callback.data == 'otmena_photo':
        await Show_photo_otprav(callback.message.chat.id)
        saved_message_id_1 = await Show_delete_message_1(callback.message.chat.id)

        await bot.delete_message(callback.message.chat.id, saved_message_id_1)
        await photo_otprav_save(callback.message.chat.id, 0)

    elif callback.data == 'delete_photo':
        await Show_photo_otprav(callback.message.chat.id)
        saved_message_id_1 = await Show_delete_message_1(callback.message.chat.id)
        saved_message_id_2 = await Show_delete_message_2(callback.message.chat.id)
        await Show_photo_status(callback.message.chat.id)
        await Show_photo_path(callback.message.chat.id)
        title1 = await Show_title(callback.message.chat.id)
        artist1 = await Show_artist(callback.message.chat.id)

        await bot.delete_message(callback.message.chat.id, saved_message_id_1)
        await bot.delete_message(callback.message.chat.id, saved_message_id_2)
        await photo_otprav_save(callback.message.chat.id, 0)
        await photo_status_save(callback.message.chat.id, 0)
        await photo_path_save(callback.message.chat.id, None)
        os.remove(f"photo_{callback.message.chat.id}.jpg")

        sent_message_2 = await bot.send_message(chat_id=callback.message.chat.id,
                                                text=f'üî• –£—Å–ø–µ—à–Ω–æ! \n\nüéß –ù–∞–∑–≤–∞–Ω–∏–µ: {title1}\n\nüë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {artist1}\n\n~~~~~~\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç—ç–≥–∏.\n\n‚ö° –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Å–Ω–∏.\n\n‚ùóÔ∏è –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–æ—Å—Ä–æ—á–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ üö™–í—ã—Ö–æ–¥',
                                                reply_markup=await button())
        saved_message_id_2 = sent_message_2.message_id
        await delete_message_2_save(callback.message.chat.id, saved_message_id_2)



    elif callback.data == 'delete_trek':
        await Delete_Treck(callback.message)

    elif callback.data == 'premium_user':
        await PremiumFunc(callback.message)

    elif callback.data == 'premium_nazad':
        await callback.message.delete()
        await Update_Profile_User(callback.message)

    elif callback.data == 'koin_operation':
        await Koin_Operations(callback.message)

    elif callback.data == 'prem_koin_operation':
        await Premium_Koin_Operations(callback.message)

    elif callback.data == 'otzovik_btn':
        otzov_flag = await otzovik_Proverka(callback.message.chat.id)

        if otzov_flag == 1:
            sent_message_1 = await bot.send_message(callback.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤:\n\n–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã - /cancel ')
            saved_message_id_1 = sent_message_1.message_id
            await delete_message_1_save(callback.message.chat.id, saved_message_id_1)
            await Otzovik_state.Otzovik_State.set()

    elif callback.data == 'show_otzovik_btn':
        await show_users_otzov(callback.message)

    elif callback.data == 'delete_otzov':
        await Delete_otzov(callback.message.chat.id)
        await callback.message.delete()
        await bot.send_message(callback.message.chat.id, "–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")

    elif callback.data == 'moder_public':

        message_id = callback.message.message_id

        otzov = await Show_public_otzov(message_id)
        nickname = otzov[1]
        id_user = otzov[2]
        text = otzov[3]

        await otzovik_save(nickname, id_user, text, 0)

        prem_prof_kb = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('üî• –û—Ç–∑—ã–≤—ã', callback_data='show_otzovik_btn')
        prem_prof_kb.add(btn1)

        await bot.send_message(chat_id=id_user, text='–í–∞—à –æ—Ç–∑—ã–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!', reply_markup=prem_prof_kb)
        await bot.send_message(callback.message.chat.id,'–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω')

        await Delete_otzov_data(id_user)


    elif callback.data == 'moder_public_anonim':

        message_id = callback.message.message_id

        otzov = await Show_public_otzov(message_id)
        nickname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        id_user = otzov[2]
        text = otzov[3]

        await otzovik_save(nickname, id_user, text, 0)

        prem_prof_kb = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('üî• –û—Ç–∑—ã–≤—ã', callback_data='show_otzovik_btn')
        prem_prof_kb.add(btn1)

        await bot.send_message(chat_id=id_user, text='–í–∞—à –æ—Ç–∑—ã–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!', reply_markup=prem_prof_kb)
        await bot.send_message(callback.message.chat.id,'–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∞–Ω–æ–Ω–∏–º–Ω–æ')

        await Delete_otzov_data(id_user)


    elif callback.data == 'moder_otklon':

        message_id = callback.message.message_id

        otzov = await Show_public_otzov(message_id)
        id_user = otzov[2]
        text = otzov[3]

        await bot.send_message(chat_id=id_user, text=f'–í–∞—à –æ—Ç–∑—ã–≤ ("{text}") –æ—Ç–∫–ª–æ–Ω–µ–Ω!\n\n–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É - @HakerMac')
        await bot.send_message(callback.message.chat.id,'–û—Ç–∫–ª–æ–Ω–µ–Ω')

        await Delete_otzov_data(id_user)

    elif callback.data == 'Rasoslat_operation':
            await bot.send_message(callback.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:")
            await Rasoslat.rasoslat.set()

    elif callback.data == 'public_moder_user':
        try:
            saved_message_id_0 = await Show_delete_message_0(callback.message.chat.id)
            saved_message_id_1 = await Show_delete_message_1(callback.message.chat.id)
            saved_message_id_2 = await Show_delete_message_2(callback.message.chat.id)

            await bot.delete_message(callback.message.chat.id, saved_message_id_0)
            await bot.delete_message(callback.message.chat.id, saved_message_id_1)
            await bot.delete_message(callback.message.chat.id, saved_message_id_2)
        except:
            ...

        await bot.send_message(callback.message.chat.id, '–°–ø–∞—Å–∏–±–æ! –û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é, –±–æ—Ç –Ω–∞–ø–∏—à–µ—Ç –æ —Ç–æ–º –ø—Ä–∏–Ω—è—Ç –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω –≤–∞—à –æ—Ç–∑—ã–≤!')

        otzov = await Show_public_data_otzov(callback.message.chat.id)

        nickname = otzov[1]
        id_user = otzov[2]
        text = otzov[3]

        moder_btn = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton('–û–ø—É–±. –ü—É–±–ª–∏—á–Ω–æ', callback_data='moder_public')
        btn2 = types.InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='moder_otklon')
        moder_btn.add(btn1, btn2)

        message_id_otzov = await bot.send_message(chat_id=2097090893,
                                                  text=f'–ù–∏–∫–Ω–µ–π–º: @{nickname}( tg://openmessage?user_id={id_user} ), \n  - {text}\n\n',
                                                  reply_markup=moder_btn)
        message_id_otzov_1 = message_id_otzov.message_id

        await Public_Otzov_message_id(message_id_otzov_1, callback.message.chat.id)


    elif callback.data == 'anon_moder_user':
        try:
            saved_message_id_0 = await Show_delete_message_0(callback.message.chat.id)
            saved_message_id_1 = await Show_delete_message_1(callback.message.chat.id)
            saved_message_id_2 = await Show_delete_message_2(callback.message.chat.id)

            await bot.delete_message(callback.message.chat.id, saved_message_id_0)
            await bot.delete_message(callback.message.chat.id, saved_message_id_1)
            await bot.delete_message(callback.message.chat.id, saved_message_id_2)
        except:
            ...

        await bot.send_message(callback.message.chat.id,
                               '–°–ø–∞—Å–∏–±–æ! –û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é, –±–æ—Ç –Ω–∞–ø–∏—à–µ—Ç –æ —Ç–æ–º –ø—Ä–∏–Ω—è—Ç –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω –≤–∞—à –æ—Ç–∑—ã–≤!')

        otzov = await Show_public_data_otzov(callback.message.chat.id)

        nickname = otzov[1]
        id_user = otzov[2]
        text = otzov[3]

        moder_btn = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton('–û–ø—É–±. –ê–Ω–æ–Ω–∏–º–Ω–æ', callback_data='moder_public_anonim')
        btn2 = types.InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='moder_otklon')
        moder_btn.add(btn1, btn2)

        message_id_otzov = await bot.send_message(chat_id=2097090893,
                                                  text=f'–ù–∏–∫–Ω–µ–π–º: @{nickname}( tg://openmessage?user_id={id_user} ), \n  - {text}\n\n',
                                                  reply_markup=moder_btn)
        message_id_otzov_1 = message_id_otzov.message_id

        await Public_Otzov_message_id(message_id_otzov_1, callback.message.chat.id)











async def main():
    # asyncio.create_task(time_obnul_one())

    await dp.start_polling(bot)



#–ë–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞
if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')